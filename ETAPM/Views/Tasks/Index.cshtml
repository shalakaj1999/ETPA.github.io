@using ETAPM.Models
@{
    ViewBag.Title = "Dashboard";
    ViewBag.PageNav = "<a class='page-nav' href='" + Url.Action("", "Dashboard") + "'>Dashboard</a><i class='page-nav-divider'></i><span class='page-nav-current'>My Task</span>";

    Layout = "~/Views/Shared/_layout.cshtml";

    CreateTask NewTask = new CreateTask { 
    };
    SelectList StartHours = ViewBag.StartHours;
    SelectList StartMinutes = ViewBag.StartMinutes;
    SelectList AssignedToAppUserId = ViewBag.AssignedToAppUserId;
}


<div class="container-fluid">

    <div class="display-4">My Tasks</div>

    <div class="mt-3">
        <button type="submit" class="btn btn-sm btn-warning" data-toggle="modal" data-target="#mdl-create-task"><i class="fas fa-plus"></i> ADD NEW</button>
    </div>

    <div id="list-task" class="form-row mt-3">
         
        @foreach (Task task in ViewBag.TaskList)
        {
        <div class="form-group col-md-6">
            <div class="card">
                <div class="card-body">

                    <div class="d-flex justify-content-between mb-0">
                        <div>
                            <span class="badge badge-warning">@task.TaskStatus.TaskStatusName</span>
                            <div class="form-label">@task.Title</div>
                        </div>


                        <div class="dropdown">
                            <div class="cursor-pointer" data-toggle="dropdown">
                                <i class="fas fa-chevron-circle-down"></i>
                            </div>
                            <div class="dropdown-menu dropdown-menu-right shadow">
                                <a class="dropdown-item" href="@Url.Action("Details","Tasks", new { id=task.TaskId })"><i class="fas fa-info-circle nav-icon text-purple"></i> Details</a>
                                <a class="dropdown-item" href="#"><i class="fas fa-percentage nav-icon text-purple"></i> Update progress</a>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-control-label font-size-12 h-36-px">@task.Description</div>
                    </div>

                    <div class="form-row">
                        <div class="form-group mb-0 col-sm-6">
                            <label class="form-label">Remaining (Min): @task.RemainingDuration/@task.Duration </label>
                        </div>
                        <div class="form-group mb-0 col-sm-6 text-sm-right">
                            <label class="form-label ">Completed: @task.Progress% </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped" style="width:@task.Progress%"></div>
                        </div>
                    </div>
                </div>
            </div> 
        </div>
        }
    </div>
</div>

<div id="mdl-create-task" class="modal fade">
    <div class="modal-dialog fixed-bottom mr-2" style="z-index:1050">
        <div class="modal-content">
            <div class="modal-header pb-1">
                <h4 class="modal-title text-blue text-uppercase" style="font-weight:500">create new task</h4>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body mt-1 pt-0">

                @using (Html.BeginForm("Create", "Tasks", FormMethod.Post, new { id = "CreateTask", onSubmit = "return CreateTask(this);" }))
                {
                     
                    <div class="form-group mb-0">
                        <label class="form-label">Estimated start date, time &amp; given duration</label>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-5">
                            @Html.TextBoxFor(task => NewTask.StartDate, new { @class = "form-control form-control-sm", placeholder = "dd-MMM-yyyy" })
                            @Html.ValidationMessageFor(task => NewTask.StartDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-2">
                            @Html.DropDownListFor(task => NewTask.StartHours, StartHours, "HH", new { @class = "form-control form-control-sm" })
                            @Html.ValidationMessageFor(task => NewTask.StartHours, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-2">
                            @Html.DropDownListFor(task => NewTask.StartMinutes, StartMinutes, "MM", new { @class = "form-control form-control-sm" })
                            @Html.ValidationMessageFor(task => NewTask.StartMinutes, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-3">
                            @Html.TextBoxFor(task => NewTask.Duration, new { @class = "form-control form-control-sm", placeholder = "Minutes" })
                            @Html.ValidationMessageFor(task => NewTask.Duration, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Assign task to</label>
                        @Html.DropDownListFor(task => NewTask.AssignedToAppUserId, AssignedToAppUserId, "Assigned to", new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(task => NewTask.AssignedToAppUserId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="form-label">Title</label>
                        @Html.TextBoxFor(task => NewTask.Title, new { @class = "form-control form-control-sm", placeholder = "Title for task should not be empty." })
                        @Html.ValidationMessageFor(task => NewTask.Title, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="form-label">Description</label>
                        @Html.TextAreaFor(task => NewTask.Description, new { @class = "form-control form-control-sm", placeholder = "Title for task should not be empty.", style="height:200px;" })
                        @Html.ValidationMessageFor(task => NewTask.Description, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <button id="btnCreateTask" type="submit" class="btn btn-sm btn-success">
                            <i class="fas fa-save nav-icon"></i> SAVE
                        </button>
                        <a href="#" class="btn btn-sm btn-secondary" data-dismiss="modal">
                            <i class="fas fa-times nav-icon"></i> CANCEL
                        </a>
                    </div>

                    <div id="form-msg-container-create-task"></div>

                }

            </div>
        </div>
    </div>
</div>

@section Scripts{ 

<script>

    $(document).ready(function () {

        $("#NewTask_StartDate").datepicker({
            changeYear: true,
            yearRange: "2019:@DateTime.Now.AddYears(10).Year"
        }); 
    })

    $('#mdl-create-task').on('show.bs.modal', function (e) {

        //setTimeout(function () {
        //    $("#Color_ProductColorName").focus();
        //}, 1000);
        
    })

    $('#mdl-create-task').on('hide.bs.modal', function (e) {
        var form = $("#CreateTask");
        ResetForm(form);
        $("#btnCreateTask").html("<i class='fas fa-save nav-icon'></i> SAVE").removeAttr("disabled");
        $("#form-msg-container-create-task").html("");
    })

    function CreateTask(form) {  
        $.validator.unobtrusive.parse(form);

        if ($(form).valid()) {

            var btn = $("#btnCreateTask");

            $(btn).html("<i class='fas fa-spinner fa-spin nav-icon'></i> PLEASE WAIT").attr("disabled","disabled");

            $.ajax({
                type: 'POST',
                url: form.action,
                data: new FormData(form),
                contentType: false,
                processData: false,
                success: function (response) {

                    $(btn).html("<i class='fas fa-check nav-icon'></i> SAVE").removeAttr("disabled");

                    if (response.status != "ok") {
                        $("#form-msg-container-create-task").html("<div class='alert alert-danger'><strong>Error:</strong> <br /> " + response.message + "</div>");
                        return false;
                    }

                    var data = response.data;
                    if (data != null) {

                        var item = "<div class='form-group col-md-6'>"; 
                        item += "<div class='card'>";
                        item += "<div class='card-body'>";                    
                        item += "<div class='d-flex justify-content-between mb-0'>";
                        item += "<div>";
                        item += "<span class='badge badge-warning'>In Progress</span>";
                        item += "<div class='form-label'>" + data.Title + "</div>";
                        item += "</div>";
                        item += "<div class='dropdown'>";
                        item += "<div class='cursor-pointer' data-toggle='dropdown'>";
                        item += "<i class='fas fa-chevron-circle-down'></i>";
                        item += "</div>";
                        item += "<div class='dropdown-menu dropdown-menu-right shadow'>";
                        item += "<a class='dropdown-item' href='#'><i class='fab fa-dropbox nav-icon text-purple'></i> Details</a>";
                        item += "</div>";
                        item += "</div>";
                        item += "</div>";
                        item += "<div class='form-group'>";
                        item += "<div class='form-control-label font-size-12 h-36-px'>" + data.Description + "</div>";
                        item += "</div>";
                        item += "<div class='form-row'>";
                        item += "<div class='form-group mb-0 col-md-6'>";
                        item += "<label class='form-label'>Remaining (Min): " + data.RemainingDuration  + "/" + data.Duration + " </label>";
                        item += "</div>";
                        item += "<div class='form-group mb-0 col-md-6 text-right'>";
                        item += "<label class='form-label '>Completed: " + data.Progress + "% </label>";
                        item += "</div>";
                        item += "</div>";
                        item += "<div class='form-group'>";
                        item += "<div class='progress'>";
                        item += "<div class='progress-bar progress-bar-striped'></div>";
                        item += "</div>";
                        item += "</div>";
                        item += "</div>";
                        item += "</div>";


                        $("#mdl-create-task").modal('hide');
                        ShowToastMessage("Action", "Task created successfully.", 3000);
                        $(item).hide().appendTo("#list-task").fadeIn(1000);
                    }

                },
                error: function (jqXHR, exception) {
                    $(btn).html("<i class='fas fa-check nav-icon'></i> SAVE").removeAttr("disabled");
                    alert(jqXHR.statusText);
                }

            });

        }

        return false;
    }

</script>

}